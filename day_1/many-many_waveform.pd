#N canvas 393 92 980 651 12;
#X obj 716 223 sig~;
#X obj 716 455 dac~;
#X floatatom 716 197 5 0 0 0 - - -;
#X obj 716 277 tabosc4~ waveform1;
#X obj 16 40 table waveform1 515;
#X obj 20 166 array size waveform1;
#X obj 20 114 + 3;
#X obj 20 138 t f b;
#X floatatom 20 190 5 0 0 0 - - -;
#X text 15 68 // change size;
#X msg 90 90 1024;
#X floatatom 195 255 5 0 0 0 - - -;
#X floatatom 247 256 5 0 0 0 - - -;
#X obj 195 329 pack f f;
#X obj 247 279 t b f;
#X text 189 235 index;
#X text 244 234 value;
#X obj 279 310 /;
#X obj 195 105 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 1
1;
#X obj 195 149 f;
#X obj 195 173 + 1;
#X obj 67 138 loadbang;
#X obj 20 213 s waveform1Size;
#X obj 297 283 r waveform1Size;
#X obj 225 173 r waveform1Size;
#X obj 195 197 %;
#X msg 195 356 \; waveform1 \$1 \$2;
#X floatatom 248 99 5 0 0 0 - - -;
#X text 722 176 // reading frequency;
#N canvas 629 53 544 554 oscData 0;
#N canvas 306 278 712 525 getOSC 0;
#X obj 78 135 netreceive -u -b;
#X msg 90 108 listen 0;
#X obj 78 188 oscparse;
#X obj 78 135 netreceive -u -b;
#X text 68 38 // Receive OSC messages;
#X text 172 80 // listen on port;
#X text 151 105 // stop listening;
#X text 211 130 // UDP packets \, binary output, f 13;
#X text 143 189 // translate OSC format to PD messages;
#X obj 78 58 loadbang;
#X text 161 218 // access the resulting list;
#X obj 78 218 route list;
#X text 189 257 // access each OSC message ID;
#X text 45 5 //----------------- Receiving OSC packages with PD Vanilla's
built-in OSC ---------------;
#X obj 22 260 print;
#X msg 78 80 listen 5000;
#X obj 78 299 route orientation;
#X obj 78 323 unpack f f f;
#X obj 78 397 outlet;
#X obj 118 367 outlet;
#X obj 158 347 outlet;
#X obj 228 323 unpack f f f;
#X obj 228 397 outlet;
#X obj 268 367 outlet;
#X obj 308 347 outlet;
#X obj 228 299 route accelerometer;
#X connect 0 0 2 0;
#X connect 1 0 0 0;
#X connect 2 0 11 0;
#X connect 9 0 15 0;
#X connect 11 0 16 0;
#X connect 11 0 25 0;
#X connect 15 0 0 0;
#X connect 16 0 17 0;
#X connect 17 0 18 0;
#X connect 17 1 19 0;
#X connect 17 2 20 0;
#X connect 21 0 22 0;
#X connect 21 1 23 0;
#X connect 21 2 24 0;
#X connect 25 0 21 0;
#X restore 63 40 pd getOSC;
#X f 43;
#X floatatom 63 113 5 0 0 0 - - -;
#X floatatom 103 93 5 0 0 0 - - -;
#X floatatom 143 73 5 0 0 0 - - -;
#X obj 68 149 pack f f f;
#X obj 31 182 t b;
#X obj 66 317 outlet;
#X obj 63 12 table oscOrientation 3;
#X msg 68 204 \; oscOrientation 0 \$1 \$2 \$3;
#X msg 68 246 \; oscOrientation normalize 1;
#X obj 66 293 array sum oscOrientation;
#X obj 313 12 table oscAccelerometer 3;
#X floatatom 303 113 5 0 0 0 - - -;
#X floatatom 343 93 5 0 0 0 - - -;
#X floatatom 383 73 5 0 0 0 - - -;
#X obj 308 149 pack f f f;
#X msg 308 204 \; oscAccelerometer 0 \$1 \$2 \$3;
#X msg 308 246 \; oscAccelerometer normalize 1;
#X obj 306 293 array sum oscAccelerometer;
#X obj 271 182 t b;
#X floatatom 306 317 5 0 0 0 - - -;
#X obj 306 374 -;
#X obj 306 398 abs;
#X obj 324 340 t f;
#X floatatom 306 422 5 0 0 0 - - -;
#X obj 306 442 expr if($f1 > 0.01 \, $f1 \, 0);
#X text 346 315 // Delta calculation;
#X obj 306 467 outlet;
#X connect 0 0 1 0;
#X connect 0 1 2 0;
#X connect 0 2 3 0;
#X connect 0 3 12 0;
#X connect 0 4 13 0;
#X connect 0 5 14 0;
#X connect 1 0 4 0;
#X connect 2 0 4 1;
#X connect 3 0 4 2;
#X connect 4 0 8 0;
#X connect 4 0 5 0;
#X connect 5 0 9 0;
#X connect 5 0 10 0;
#X connect 10 0 6 0;
#X connect 12 0 15 0;
#X connect 13 0 15 1;
#X connect 14 0 15 2;
#X connect 15 0 16 0;
#X connect 15 0 19 0;
#X connect 18 0 20 0;
#X connect 19 0 17 0;
#X connect 19 0 18 0;
#X connect 20 0 21 0;
#X connect 20 0 23 0;
#X connect 21 0 22 0;
#X connect 22 0 24 0;
#X connect 23 0 21 1;
#X connect 24 0 25 0;
#X connect 25 0 27 0;
#X restore 467 93 pd oscData;
#X f 36;
#X floatatom 467 117 5 0 0 0 - - -;
#X obj 467 140 sopiscale -1 1 -1 3;
#X text 306 302 // in case we don't normalize the values;
#X floatatom 716 119 5 0 0 0 - - -;
#X obj 716 247 lop~ 1;
#X msg 50 90 512;
#X msg 10 90 256;
#X obj 716 144 sopiscale 1 200 0.01 0.5;
#X obj 195 125 metro 10;
#X text 192 76 // write new values to the waveform;
#X text 15 18 // initialising array size of 515;
#X obj 649 144 > 0.01;
#X obj 589 168 s envelopeValue;
#X obj 775 304 r envelopeValue;
#X obj 716 431 *~;
#X obj 775 352 line~;
#X obj 775 376 *~;
#X obj 775 400 *~;
#X msg 775 328 \$1 5;
#X text 28 503 // excercise:;
#X text 28 517 // use your own controller to map the waveform synthesizer
;
#X text 25 543 // many-many have multiple possibilities \, find other
functions;
#X text 26 531 // perhaps control more than 1 waveform;
#X msg 37 458 \; pd dsp \$1;
#X obj 37 436 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X obj 37 413 loadbang;
#X connect 0 0 34 0;
#X connect 2 0 0 0;
#X connect 3 0 44 0;
#X connect 5 0 8 0;
#X connect 6 0 7 0;
#X connect 7 0 5 0;
#X connect 7 1 5 0;
#X connect 8 0 22 0;
#X connect 10 0 6 0;
#X connect 11 0 13 0;
#X connect 12 0 14 0;
#X connect 13 0 26 0;
#X connect 14 0 13 0;
#X connect 14 1 17 0;
#X connect 14 1 13 1;
#X connect 18 0 38 0;
#X connect 19 0 20 0;
#X connect 20 0 25 0;
#X connect 20 0 19 1;
#X connect 21 0 5 0;
#X connect 23 0 17 1;
#X connect 24 0 25 1;
#X connect 25 0 11 0;
#X connect 27 0 38 1;
#X connect 29 0 30 0;
#X connect 29 1 33 0;
#X connect 30 0 31 0;
#X connect 31 0 12 0;
#X connect 33 0 37 0;
#X connect 33 0 41 0;
#X connect 34 0 3 0;
#X connect 35 0 6 0;
#X connect 36 0 6 0;
#X connect 37 0 2 0;
#X connect 38 0 19 0;
#X connect 41 0 42 0;
#X connect 43 0 48 0;
#X connect 44 0 1 0;
#X connect 44 0 1 1;
#X connect 45 0 46 0;
#X connect 45 0 46 1;
#X connect 46 0 47 0;
#X connect 46 0 47 1;
#X connect 47 0 44 1;
#X connect 48 0 45 0;
#X connect 54 0 53 0;
#X connect 55 0 54 0;
