#N canvas 0 89 1326 957 12;
#X msg 22 21 bang;
#X obj 22 43 openpanel;
#X obj 22 87 soundfiler;
#X obj 22 159 s \$0-filesize;
#X obj 94 43 table source1;
#X msg 22 65 read -resize \$1 source1;
#N canvas 470 219 565 454 hann-window 0;
#N canvas 0 0 450 300 (subpatch) 0;
#X array hanningWindow 512 float 0;
#X coords 0 1 511 0 300 100 1;
#X restore 82 311 graph;
#X obj 438 165 osc~;
#X obj 438 190 *~ -0.5;
#X obj 438 214 +~ 0.5;
#X obj 38 88 r window-size;
#X obj 38 183 /;
#X obj 127 152 samplerate~;
#X obj 38 261 s window-sec;
#X obj 177 214 swap;
#X obj 177 238 /;
#X obj 177 262 s window-hz;
#X obj 49 211 * 1000;
#X obj 49 238 s window-msec;
#X obj 38 115 t f b f;
#X obj 390 105 r window-hz;
#X msg 442 130 0;
#X obj 390 131 t f b;
#X text 15 8 calculate Hann window table (variable window size) and
constants window-hz (fundamental frequency of analysis) \, window-sec
and window-msec (analysis window size in seconds and msec).;
#X obj 391 247 tabwrite~ hanningWindow;
#X msg 213 142 \; hanningWindow resize \$1;
#X connect 1 0 2 0;
#X connect 2 0 3 0;
#X connect 3 0 18 0;
#X connect 4 0 13 0;
#X connect 5 0 7 0;
#X connect 5 0 11 0;
#X connect 6 0 5 1;
#X connect 6 0 8 1;
#X connect 8 0 9 0;
#X connect 8 1 9 1;
#X connect 9 0 10 0;
#X connect 11 0 12 0;
#X connect 13 0 5 0;
#X connect 13 0 8 0;
#X connect 13 1 6 0;
#X connect 13 2 19 0;
#X connect 14 0 16 0;
#X connect 15 0 1 1;
#X connect 16 0 1 0;
#X connect 16 1 15 0;
#X connect 16 1 18 0;
#X restore 233 157 pd hann-window;
#X msg 233 46 512;
#X msg 233 68 1024;
#X msg 233 90 2048;
#X msg 233 112 4096;
#X obj 233 134 s window-size;
#X obj 150 271 t b f;
#X obj 150 301 /;
#X obj 40 298 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 1
1;
#X obj 40 318 metro 100;
#X obj 40 340 f;
#X obj 70 340 + 1;
#X obj 40 386 t f b b;
#X obj 55 434 random 10000;
#X obj 86 486 random 200;
#X obj 104 249 * 0.5;
#X obj 86 550 + 1;
#X obj 22 578 pack f f f;
#X msg 22 632 \$1 \$2 1;
#X msg 128 632 \$1 \$2 1;
#X msg 234 632 \$1 \$2 1;
#X msg 340 632 \$1 \$2 1;
#X obj 40 276 loadbang;
#X obj 22 600 route 0 1 2 3, f 61;
#X obj 150 249 r overlap;
#X obj 40 364 % 4;
#X obj 571 233 hsl 128 15 0 1 0 0 empty empty grain_start -2 -8 0 10
-262144 -1 -1 0 1;
#X floatatom 568 253 5 0 0 0 - - -, f 5;
#X obj 568 283 t f b;
#X obj 595 319 f;
#X obj 613 297 r \$0-filesize;
#X obj 568 342 *;
#X obj 573 400 hsl 128 15 0 2000 0 0 empty duration grain_duration
-2 -8 0 10 -262144 -1 -1 0 1;
#X floatatom 570 420 5 0 0 0 - - -, f 5;
#X obj 575 482 hsl 128 15 0 2 0 0 empty pitch grain_pitch -2 -8 0 10
-262144 -1 -1 0 1;
#X floatatom 572 502 5 0 0 0 - - -, f 5;
#X obj 572 551 * 44100;
#X obj 565 614 hsl 128 15 0 2 0 0 empty empty overlap -2 -8 0 10 -262144
-1 -1 0 1;
#X floatatom 562 634 5 0 0 0 - - -, f 5;
#X obj 562 653 s overlap;
#X obj 22 656 grainvoice;
#X obj 128 656 grainvoice;
#X obj 234 656 grainvoice;
#X obj 340 656 grainvoice;
#X obj 28 723 catch~ bus;
#X obj 86 528 / 10000;
#X obj 89 136 s \$0-sampleRate;
#X obj 590 526 r \$0-sampleRate;
#X obj 570 439 s grainDuration;
#X obj 568 364 s grainStart;
#X obj 562 573 s grainPitch;
#X obj 104 227 r grainDuration;
#X obj 89 112 t f;
#X text 71 364 // circle around n-grains;
#X floatatom 136 407 10 0 0 2 //_grainvoice_sample_start_offset - -
, f 10;
#X floatatom 153 461 10 0 0 2 //_pitch_deviation - -, f 10;
#X text 224 251 // overlap = gap between grains;
#X text 224 263 // the smaller overlap \, the bigger the gap;
#N canvas 110 23 984 575 oscData 0;
#N canvas 264 91 537 705 getOSC 0;
#X obj 78 135 netreceive -u -b;
#X msg 90 108 listen 0;
#X obj 78 188 oscparse;
#X obj 78 135 netreceive -u -b;
#X text 68 38 // Receive OSC messages;
#X text 172 80 // listen on port;
#X text 151 105 // stop listening;
#X text 211 130 // UDP packets \, binary output, f 13;
#X text 143 189 // translate OSC format to PD messages;
#X obj 78 58 loadbang;
#X text 161 218 // access the resulting list;
#X obj 78 218 route list;
#X text 189 257 // access each OSC message ID;
#X text 45 5 //----------------- Receiving OSC packages with PD Vanilla's
built-in OSC ---------------;
#X msg 78 80 listen 5000;
#X obj 78 553 unpack f f;
#X obj 133 483 unpack f f;
#X obj 188 403 unpack f f;
#X obj 249 333 unpack f f;
#X obj 279 357 s y4;
#X obj 249 378 s x4;
#X obj 218 427 s y3;
#X obj 188 448 s x3;
#X obj 163 507 s y2;
#X obj 133 528 s x2;
#X obj 108 577 s y1;
#X obj 78 598 s x1;
#X obj 78 299 route touch1 touch2 touch3 touch4;
#X connect 0 0 2 0;
#X connect 1 0 0 0;
#X connect 2 0 11 0;
#X connect 9 0 14 0;
#X connect 11 0 27 0;
#X connect 14 0 0 0;
#X connect 15 0 26 0;
#X connect 15 1 25 0;
#X connect 16 0 24 0;
#X connect 16 1 23 0;
#X connect 17 0 22 0;
#X connect 17 1 21 0;
#X connect 18 0 20 0;
#X connect 18 1 19 0;
#X connect 27 0 15 0;
#X connect 27 1 16 0;
#X connect 27 2 17 0;
#X connect 27 3 18 0;
#X restore 31 27 pd getOSC, f 43;
#X obj 31 111 r x1;
#X floatatom 31 141 5 0 0 0 - - -, f 5;
#X obj 31 261 outlet;
#X obj 71 111 r x2;
#X obj 111 111 r x3;
#X obj 151 111 r x4;
#X floatatom 71 141 5 0 0 0 - - -, f 5;
#X floatatom 111 141 5 0 0 0 - - -, f 5;
#X floatatom 151 141 5 0 0 0 - - -, f 5;
#X obj 31 234 expr if($f1 > 0 || $f2 > 0 || $f3 > 0 || $f4 > 0 \, 1
\, 0);
#X obj 71 164 t f b;
#X obj 121 164 t f b;
#X obj 171 164 t f b;
#X obj 481 92 r x2;
#X text 27 82 // on / off;
#X obj 441 92 r x1;
#X obj 441 126 expr sqrt(0.5 * (pow($f1 \, 2) + pow($f2 \, 2)));
#X text 433 68 // rms sqrt(1/n * (x1 ** 2) + (x2 **2) + (xn ** 2))
;
#X obj 441 180 outlet;
#X floatatom 441 156 5 0 0 0 - - -, f 5;
#X obj 171 392 r x2;
#X obj 131 392 r x1;
#X obj 31 480 outlet;
#X floatatom 31 456 5 0 0 0 - - -, f 5;
#X text 23 368 // distance sqrt(((x1 - x2) ** 2) + ((y1 - y2) ** 2))
;
#X obj 221 392 r y1;
#X obj 261 392 r y2;
#X obj 31 426 expr sqrt(pow(($f1 - $f2) \, 2) + pow(($f3 - $f4) \,
2));
#X connect 1 0 2 0;
#X connect 2 0 10 0;
#X connect 4 0 7 0;
#X connect 5 0 8 0;
#X connect 6 0 9 0;
#X connect 7 0 11 0;
#X connect 8 0 12 0;
#X connect 9 0 13 0;
#X connect 10 0 3 0;
#X connect 11 0 10 1;
#X connect 11 1 10 0;
#X connect 12 0 10 2;
#X connect 12 1 10 0;
#X connect 13 0 10 3;
#X connect 13 1 10 0;
#X connect 14 0 17 1;
#X connect 16 0 17 0;
#X connect 17 0 20 0;
#X connect 20 0 19 0;
#X connect 21 0 28 1;
#X connect 22 0 28 0;
#X connect 24 0 23 0;
#X connect 26 0 28 2;
#X connect 27 0 28 3;
#X connect 28 0 24 0;
#X restore 482 10 pd oscData, f 36;
#X floatatom 606 34 5 0 0 0 - - -, f 5;
#X obj 606 57 s amp;
#X obj 115 693 r amp;
#X obj 115 741 line~;
#X obj 115 765 *~;
#X obj 115 789 *~;
#X obj 28 758 *~;
#X msg 115 717 \$1 10;
#X floatatom 731 37 5 0 0 0 - - -, f 5;
#X obj 731 140 s pitch;
#X obj 731 113 line;
#X msg 731 89 \$1 100;
#X obj 731 59 sopiscale 0 1.1 0 1;
#X floatatom 446 63 5 0 0 0 - - -, f 5;
#X obj 446 139 line;
#X msg 446 115 \$1 100;
#X obj 446 166 s duration;
#X obj 446 85 sopiscale 0.1 2000 0.2 1.2;
#X obj 204 702 loadbang;
#X obj 204 727 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 1
1;
#X msg 204 747 \; pd dsp \$1;
#X obj 233 15 loadbang;
#X text 807 231 // excercise:;
#X text 807 251 // play around with the synth parameters;
#X text 807 271 // choose your own mappings;
#X text 807 291 // implement more voices and the possibility;
#X text 807 311 // to play with more than one source;
#X text 814 442 // expand your knowledge:;
#X text 814 492 // implement the other synthesis technique suggested
in the chapter;
#X text 814 523 // here's a live granular implementation http://www.pd-tutorial.com/english/patches/3-7-2-2-granular-live-feedback.pd
;
#X text 814 462 // read chapter 21 (or the whole book) of Andy Farnell's
Desining Sound;
#X text 807 331 // implement pannig functionality;
#N canvas 0 89 505 461 output 0;
#X obj 13 106 hsl 42 23 0.01 0.1 1 0 \$0-v \$0-v volume 7 13 1 9 -245500
-13381 -1 0 0;
#X obj 57 106 tgl 18 0 THIS_IS_HERE_TO_GET_RID_OF_THE_OUTLET \$0-dsp-toggle
dsp 2 9 1 9 -225271 -195568 -33289 1 1;
#N canvas 1009 460 429 371 dsp 0;
#X obj 36 30 inlet;
#X obj 117 227 select 0 1;
#X msg 150 252 6;
#X obj 117 86 route dsp;
#X obj 117 59 receive pd;
#X msg 36 228 dsp \$1;
#X obj 36 253 send pd;
#X msg 231 279 set \$1;
#X msg 117 279 color \$1 20 12;
#X obj 231 310 send \$0-dsp-toggle;
#X msg 117 251 0;
#X obj 251 129 loadbang;
#X obj 231 99 sig~ 1;
#X obj 231 191 snapshot~;
#X obj 251 158 delay 100;
#X obj 117 138 change -1;
#X obj 2 2 cnv 15 425 20 empty empty empty 3 12 0 14 -204280 -1 0;
#X text 6 3 Retrieve and set DSP state;
#X connect 0 0 5 0;
#X connect 0 0 15 0;
#X connect 1 0 10 0;
#X connect 1 1 2 0;
#X connect 2 0 8 0;
#X connect 3 0 15 0;
#X connect 4 0 3 0;
#X connect 5 0 6 0;
#X connect 7 0 9 0;
#X connect 8 0 9 0;
#X connect 10 0 8 0;
#X connect 11 0 14 0;
#X connect 12 0 13 0;
#X connect 13 0 1 0;
#X connect 13 0 7 0;
#X connect 14 0 13 0;
#X connect 15 0 7 0;
#X connect 15 0 1 0;
#X restore 82 148 pd dsp logic;
#X obj 188 31 inlet~;
#X obj 74 268 line~;
#X obj 174 328 *~;
#X obj 194 358 dac~;
#X text 200 51 audio in;
#X obj 250 31 inlet~;
#X obj 236 327 *~;
#X obj 188 102 hip~ 3;
#X obj 250 102 hip~ 3;
#X obj 10 283 send pd;
#X msg 10 262 dsp 1;
#X obj 74 247 pack 0 50;
#X text 141 246 <-- make a ramp to avoid clicks or zipper noise;
#X msg 74 212 0;
#X obj 74 189 moses 0.011;
#X text 294 103 filter out DC;
#X obj 4 3 cnv 15 425 20 empty empty empty 3 12 0 14 -204280 -1 0;
#X text 14 376 Created by Katja Vetter after an idea by Claude Heiland-Allen
;
#X text 10 3 dac~ and DSP switch;
#X connect 0 0 13 0;
#X connect 0 0 17 0;
#X connect 1 0 2 0;
#X connect 3 0 10 0;
#X connect 4 0 9 0;
#X connect 4 0 5 0;
#X connect 5 0 6 0;
#X connect 8 0 11 0;
#X connect 9 0 6 1;
#X connect 10 0 5 1;
#X connect 11 0 9 1;
#X connect 13 0 12 0;
#X connect 14 0 4 0;
#X connect 16 0 14 0;
#X connect 17 0 16 0;
#X connect 17 1 14 0;
#X coords 0 -1 1 1 85 60 1 5 85;
#X restore 27 818 pd output;
#X connect 0 0 1 0;
#X connect 1 0 5 0;
#X connect 2 0 3 0;
#X connect 2 1 58 0;
#X connect 5 0 2 0;
#X connect 7 0 11 0;
#X connect 8 0 11 0;
#X connect 9 0 11 0;
#X connect 10 0 11 0;
#X connect 12 0 13 0;
#X connect 12 1 13 1;
#X connect 13 0 15 1;
#X connect 14 0 15 0;
#X connect 15 0 16 0;
#X connect 16 0 17 0;
#X connect 16 0 31 0;
#X connect 17 0 16 1;
#X connect 18 0 23 0;
#X connect 18 1 19 0;
#X connect 18 2 20 0;
#X connect 19 0 23 1;
#X connect 20 0 51 0;
#X connect 21 0 13 0;
#X connect 22 0 23 2;
#X connect 23 0 29 0;
#X connect 24 0 46 0;
#X connect 25 0 47 0;
#X connect 26 0 48 0;
#X connect 27 0 49 0;
#X connect 28 0 14 0;
#X connect 29 0 24 0;
#X connect 29 1 25 0;
#X connect 29 2 26 0;
#X connect 29 3 27 0;
#X connect 30 0 12 0;
#X connect 31 0 18 0;
#X connect 32 0 33 0;
#X connect 33 0 34 0;
#X connect 34 0 37 0;
#X connect 34 1 35 0;
#X connect 35 0 37 1;
#X connect 36 0 35 1;
#X connect 37 0 55 0;
#X connect 38 0 39 0;
#X connect 39 0 54 0;
#X connect 40 0 41 0;
#X connect 41 0 42 0;
#X connect 42 0 56 0;
#X connect 43 0 44 0;
#X connect 44 0 45 0;
#X connect 50 0 71 0;
#X connect 51 0 22 0;
#X connect 53 0 42 1;
#X connect 57 0 21 0;
#X connect 58 0 52 0;
#X connect 60 0 19 1;
#X connect 61 0 20 1;
#X connect 64 0 78 0;
#X connect 64 1 65 0;
#X connect 64 2 73 0;
#X connect 65 0 66 0;
#X connect 67 0 72 0;
#X connect 68 0 69 0;
#X connect 68 0 69 1;
#X connect 69 0 70 0;
#X connect 69 0 70 1;
#X connect 70 0 71 1;
#X connect 71 0 97 0;
#X connect 71 0 97 1;
#X connect 72 0 68 0;
#X connect 73 0 77 0;
#X connect 75 0 74 0;
#X connect 76 0 75 0;
#X connect 77 0 76 0;
#X connect 78 0 82 0;
#X connect 79 0 81 0;
#X connect 80 0 79 0;
#X connect 82 0 80 0;
#X connect 83 0 84 0;
#X connect 84 0 85 0;
#X connect 86 0 7 0;
