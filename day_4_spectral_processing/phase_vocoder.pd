#N canvas 24 247 1002 693 10;
#X floatatom 346 251 5 0 0 0 - transpo-set -, f 5;
#X floatatom 101 295 5 0 0 0 - speed-set -, f 5;
#X floatatom 22 295 7 0 0 0 - location-set -, f 7;
#N canvas 196 89 821 693 fft-analysis 0;
#X obj 51 477 *~;
#X obj 18 477 *~;
#X obj 18 499 -~;
#X obj 167 475 *~;
#X obj 136 475 *~;
#X obj 136 497 +~;
#X obj 109 193 *~;
#X obj 78 193 *~;
#X obj 50 193 *~;
#X obj 19 193 *~;
#X obj 19 218 +~;
#X obj 127 379 *~;
#X obj 20 622 *~;
#X obj 238 430 rfft~;
#X obj 108 161 rfft~;
#X obj 19 564 rifft~;
#X obj 21 646 outlet~;
#X obj 97 379 *~;
#X obj 97 401 +~;
#X obj 124 218 -~;
#X obj 18 431 *~;
#X obj 51 432 *~;
#X obj 127 622 r window-size;
#X obj 426 595 r window-size;
#X obj 426 644 block~;
#X obj 19 349 +~ 1e-15;
#X obj 19 598 *~;
#X obj 52 598 tabreceive~ \$0-hann;
#X obj 127 643 expr 2/(3*$f1);
#X obj 591 563 loadbang;
#X msg 591 589 \; pd dsp 1 \; window-size 2048 \; transpo 0 \; rewind
bang;
#X msg 426 619 set \$1 4;
#X obj 97 425 q8_rsqrt~;
#N canvas -210 130 1066 826 read-windows 0;
#X obj 18 693 *~;
#X obj 364 448 r window-size;
#X obj 156 300 f;
#X obj 102 91 r window-size;
#X obj 102 139 /;
#X obj 195 695 *~;
#X obj 156 255 bang~;
#X obj 17 551 line~;
#X obj 102 164 * 1000;
#X obj 288 224 r speed;
#X obj 178 276 r location;
#X obj 198 302 +;
#X obj 288 272 *;
#X obj 183 470 +;
#X obj 143 446 t f f;
#X msg 17 523 \$1 \, \$2 \$3;
#X obj 17 496 pack 0 0 0;
#X obj 178 371 / 1000;
#X obj 156 394 *;
#X text 188 394 reading location (samples);
#X obj 51 597 / 4;
#X obj 288 245 * 0.01;
#X floatatom 364 498 7 0 0 0 - - -, f 7;
#X obj 364 474 *;
#X obj 502 347 r transpo;
#X obj 502 369 * 0.01;
#X obj 504 390 + 69;
#X obj 505 411 mtof;
#X obj 505 433 / 440;
#X obj 399 474 t b f;
#X obj 18 719 outlet~;
#X obj 195 720 outlet~;
#X obj 218 664 tabreceive~ \$0-hann;
#X obj 803 496 r location;
#X msg 803 519 0;
#X obj 803 542 s speed;
#X obj 768 618 r speed;
#X msg 768 642 set \$1;
#X obj 768 667 s speed-set;
#X text 432 498 stretched window size (samples);
#X obj 877 617 r transpo;
#X msg 877 643 set \$1;
#X obj 877 668 s transpo-set;
#X obj 808 94 r location;
#X msg 827 368 set \$1;
#X obj 808 140 t b f;
#X obj 826 257 f;
#X obj 754 171 int;
#X obj 754 203 sel 0;
#X msg 813 174 1;
#X msg 813 197 0;
#X obj 754 228 del 300;
#X obj 827 392 s location-set;
#X obj 17 637 tabread4~ \$0-sample;
#X obj 194 637 tabread4~ \$0-sample;
#X obj 178 347 r \$0-insamprate;
#X obj 528 586 r rewind;
#X msg 528 744 \; location \$1;
#X floatatom 111 187 5 0 0 0 - - -, f 5;
#X obj 102 115 t f b;
#X obj 142 139 samplerate~;
#X obj 102 208 / 4;
#X obj 233 306 s see-loc;
#X obj 817 116 r see-loc;
#X obj 193 420 / 2;
#X obj 156 420 -;
#X text 229 417 back up 1/2 window;
#X obj 16 597 -~;
#X text 43 6 Read two windows out of the recorded sample \, one 1/4
ahead of the other. The mid point of the front window is specified
by "location". If "speed" is nonzero \, "location" automatically precesses.
;
#X obj 528 720 * -0.5;
#X text 91 587 "back" window 1/4 cycle behind "front" one;
#X text 137 205 computation period (msec) for overlap of 4;
#X text 164 186 msec in a window;
#X obj 528 666 /;
#X obj 528 691 * 1000;
#X obj 528 642 t f b;
#X obj 568 666 samplerate~;
#X obj 528 619 f;
#X msg 845 761 \; rewind bang \; speed \$1;
#X obj 845 734 r auto;
#X obj 730 735 r no-detune;
#X msg 730 757 \; detune 0;
#X text 321 280 loop to precess the location according;
#X text 320 296 to the "speed" parameter.;
#X text 611 31 if location changes \, update number box;
#X text 610 50 in main window via "location-set" \, but;
#X text 613 69 taking care to limit frequency of updates.;
#X text 756 572 reflect control changes;
#X text 756 589 in main window.;
#X text 754 454 setting location by hand;
#X text 752 472 sets speed to zero.;
#X text 760 703 misc controls;
#X text 496 527 "rewind" control takes us;
#X text 499 545 to a location depending on;
#X text 499 564 stretched window size.;
#X obj 593 457 t b f;
#X obj 617 395 samplerate~;
#X obj 593 348 r \$0-insamprate;
#X obj 593 418 /;
#X obj 505 455 * 1;
#X text 494 312 desired transposition and sample;
#X text 494 329 rate correction for soundfile;
#X obj 593 370 t f b;
#X floatatom 826 289 9 0 0 0 - - -, f 9;
#X obj 935 289 r \$0-sampleDur;
#X obj 827 340 %;
#X obj 920 340 >;
#X obj 920 362 sel 1;
#X obj 922 383 pack b f;
#X msg 920 404 \; rewind bang \; speed \$2;
#X obj 962 362 r speed;
#X text 933 270 // looping addition;
#X connect 0 0 30 0;
#X connect 1 0 23 0;
#X connect 2 0 11 0;
#X connect 2 0 18 0;
#X connect 3 0 59 0;
#X connect 4 0 8 0;
#X connect 5 0 31 0;
#X connect 6 0 2 0;
#X connect 7 0 67 0;
#X connect 7 0 54 0;
#X connect 8 0 58 0;
#X connect 8 0 61 0;
#X connect 9 0 21 0;
#X connect 10 0 2 1;
#X connect 11 0 2 1;
#X connect 11 0 62 0;
#X connect 12 0 11 1;
#X connect 13 0 16 1;
#X connect 14 0 16 0;
#X connect 14 1 13 0;
#X connect 15 0 7 0;
#X connect 16 0 15 0;
#X connect 17 0 18 1;
#X connect 18 0 65 0;
#X connect 20 0 67 1;
#X connect 21 0 12 0;
#X connect 22 0 20 0;
#X connect 22 0 13 1;
#X connect 22 0 64 0;
#X connect 22 0 77 1;
#X connect 23 0 22 0;
#X connect 24 0 25 0;
#X connect 25 0 26 0;
#X connect 26 0 27 0;
#X connect 27 0 28 0;
#X connect 28 0 99 0;
#X connect 29 0 23 0;
#X connect 29 1 23 1;
#X connect 32 0 5 1;
#X connect 32 0 0 1;
#X connect 33 0 34 0;
#X connect 34 0 35 0;
#X connect 36 0 37 0;
#X connect 37 0 38 0;
#X connect 40 0 41 0;
#X connect 41 0 42 0;
#X connect 43 0 45 0;
#X connect 44 0 52 0;
#X connect 45 0 47 0;
#X connect 45 1 46 1;
#X connect 46 0 103 0;
#X connect 47 0 48 0;
#X connect 48 0 49 0;
#X connect 48 0 51 0;
#X connect 49 0 47 1;
#X connect 50 0 47 1;
#X connect 51 0 50 0;
#X connect 51 0 46 0;
#X connect 53 0 0 0;
#X connect 54 0 5 0;
#X connect 55 0 17 0;
#X connect 56 0 77 0;
#X connect 59 0 4 0;
#X connect 59 1 60 0;
#X connect 60 0 4 1;
#X connect 61 0 16 2;
#X connect 61 0 12 1;
#X connect 63 0 45 0;
#X connect 64 0 65 1;
#X connect 65 0 14 0;
#X connect 67 0 53 0;
#X connect 69 0 57 0;
#X connect 73 0 74 0;
#X connect 74 0 69 0;
#X connect 75 0 73 0;
#X connect 75 1 76 0;
#X connect 76 0 73 1;
#X connect 77 0 75 0;
#X connect 79 0 78 0;
#X connect 80 0 81 0;
#X connect 95 0 99 0;
#X connect 95 1 99 1;
#X connect 96 0 98 1;
#X connect 97 0 102 0;
#X connect 98 0 95 0;
#X connect 99 0 29 0;
#X connect 102 0 98 0;
#X connect 102 1 96 0;
#X connect 103 0 105 0;
#X connect 103 0 106 0;
#X connect 104 0 105 1;
#X connect 104 0 106 1;
#X connect 105 0 44 0;
#X connect 106 0 107 0;
#X connect 107 0 108 0;
#X connect 108 0 109 0;
#X connect 110 0 108 1;
#X restore 109 133 pd read-windows;
#X obj 137 543 tabsend~ prev-imag;
#X obj 136 567 tabsend~ prev-real;
#X obj 20 8 tabreceive~ prev-real;
#X obj 73 29 tabreceive~ prev-imag;
#X text 272 5 recall previous output amplitude. Its phase will be added
to the phase difference we measure from two windows in the the recorded
sound.;
#X obj 121 69 *~;
#X obj 89 69 *~;
#X obj 89 91 +~;
#X obj 159 94 q8_rsqrt~;
#X obj 159 71 +~ 1e-20;
#X obj 73 119 *~;
#X obj 19 118 *~;
#X obj 181 290 r lock;
#X obj 29 245 lrshift~ 1;
#X obj 24 269 lrshift~ -1;
#X obj 141 245 lrshift~ 1;
#X obj 133 269 lrshift~ -1;
#X obj 35 300 *~;
#X obj 159 312 *~;
#X obj 19 325 +~;
#X obj 125 331 +~;
#X text 247 66 divide by the magnitude to make a unit-magnitude complex
amplitude (phase only). The 1e-20 is to prevent overflows. q8_rsqrt~
is reciprocal square root.;
#X text 247 165 Take FT of the window in back. Multiply its conjugate
by the normalized previous output. The result has the magnitude of
the input sound and phase (previous output phase) minus (back window
phase).;
#X text 249 370 Normalize again \, this time taking care to salt each
channel with 1e-15 so that we get a unit complex number even if everything
was zero heretofore.;
#X text 288 427 Now take the FT of the forward window and multiply
it by the unit complex number from above. The magnitude will be that
of the forward window and the phase will be the previous output phase
plus the phase difference between the two analysis windows -- except
that if "lock" is on \, they will be modified to agree progressively
better with the inter-channel phase relationships of the input.;
#X text 249 242 If "lock" is on \, encourage neighboring channels to
stay in phase by adding the two neighboring complex amplitudes. The
result will tend toward the channel with the strongest amplitude. If
the phase relationships between channels in the output and those in
the input are in parallel \, then neighboring channels of the quotient
will all have the same phase and this will not change any phases. (lrshift
shifts the signal to the left or right depending on its argument.)
;
#X text 387 560 'set' message to block;
#X text 390 577 allows variable size;
#X text 259 126 Read two windows \, one 1/4 length behind the other
\, of the input sound \, with Hann window function (see inside).;
#X connect 0 0 2 1;
#X connect 1 0 2 0;
#X connect 2 0 35 0;
#X connect 2 0 15 0;
#X connect 3 0 5 1;
#X connect 4 0 5 0;
#X connect 5 0 34 0;
#X connect 5 0 15 1;
#X connect 6 0 19 1;
#X connect 7 0 19 0;
#X connect 8 0 10 1;
#X connect 9 0 10 0;
#X connect 10 0 48 0;
#X connect 10 0 47 0;
#X connect 10 0 53 0;
#X connect 11 0 18 1;
#X connect 12 0 16 0;
#X connect 13 0 1 1;
#X connect 13 0 3 1;
#X connect 13 1 0 1;
#X connect 13 1 4 1;
#X connect 14 0 9 1;
#X connect 14 0 7 1;
#X connect 14 1 6 1;
#X connect 14 1 8 1;
#X connect 15 0 26 0;
#X connect 17 0 18 0;
#X connect 18 0 32 0;
#X connect 19 0 49 0;
#X connect 19 0 50 0;
#X connect 19 0 54 0;
#X connect 20 0 1 0;
#X connect 20 0 4 0;
#X connect 21 0 0 0;
#X connect 21 0 3 0;
#X connect 22 0 28 0;
#X connect 23 0 31 0;
#X connect 25 0 17 1;
#X connect 25 0 17 0;
#X connect 25 0 20 0;
#X connect 26 0 12 0;
#X connect 27 0 26 1;
#X connect 28 0 12 1;
#X connect 29 0 30 0;
#X connect 31 0 24 0;
#X connect 32 0 20 1;
#X connect 32 0 21 1;
#X connect 33 0 14 0;
#X connect 33 1 13 0;
#X connect 36 0 40 1;
#X connect 36 0 40 0;
#X connect 36 0 45 0;
#X connect 37 0 39 1;
#X connect 37 0 39 0;
#X connect 37 0 44 0;
#X connect 39 0 41 1;
#X connect 40 0 41 0;
#X connect 41 0 43 0;
#X connect 42 0 44 1;
#X connect 42 0 45 1;
#X connect 43 0 42 0;
#X connect 44 0 8 0;
#X connect 44 0 7 0;
#X connect 45 0 9 0;
#X connect 45 0 6 0;
#X connect 46 0 51 1;
#X connect 46 0 52 1;
#X connect 47 0 51 0;
#X connect 48 0 51 0;
#X connect 49 0 52 0;
#X connect 50 0 52 0;
#X connect 51 0 53 1;
#X connect 52 0 54 1;
#X connect 53 0 25 0;
#X connect 54 0 11 0;
#X connect 54 0 11 1;
#X connect 54 0 21 0;
#X restore 22 540 pd fft-analysis;
#N canvas 260 23 647 768 phase-tables 0;
#N canvas 0 22 450 300 (subpatch) 0;
#X array prev-imag 4096 float 0;
#X coords 0 1000 4096 -1000 400 300 1;
#X restore 169 326 graph;
#N canvas 0 22 450 300 (subpatch) 0;
#X array prev-real 4096 float 0;
#X coords 0 500 4096 -500 400 300 1;
#X restore 170 17 graph;
#X restore 170 486 pd phase-tables;
#X obj 346 274 s transpo;
#X text 98 274 hundredths;
#X text 345 230 in cents;
#X text 269 270 normal;
#X obj 23 567 output~;
#N canvas 0 110 565 454 hann-window 0;
#N canvas 0 22 450 300 (subpatch) 0;
#X array \$0-hann 512 float 0;
#X coords 0 1 511 0 300 100 1;
#X restore 82 311 graph;
#X obj 378 165 osc~;
#X obj 378 190 *~ -0.5;
#X obj 378 214 +~ 0.5;
#X obj 331 247 tabwrite~ \$0-hann;
#X obj 37 88 r window-size;
#X obj 38 173 /;
#X obj 127 142 samplerate~;
#X obj 38 251 s window-sec;
#X obj 177 204 swap;
#X obj 177 228 /;
#X obj 177 252 s window-hz;
#X obj 49 201 * 1000;
#X obj 49 228 s window-msec;
#X obj 38 115 t f b f;
#X msg 173 92 resize \$1;
#X obj 173 116 s \$0-hann;
#X obj 330 105 r window-hz;
#X msg 382 130 0;
#X obj 330 131 t f b;
#X text 15 8 calculate Hann window table (variable window size) and
constants window-hz (fundamental frequency of analysis) \, window-sec
and window-msec (analysis window size in seconds and msec).;
#X connect 1 0 2 0;
#X connect 2 0 3 0;
#X connect 3 0 4 0;
#X connect 5 0 14 0;
#X connect 6 0 8 0;
#X connect 6 0 12 0;
#X connect 7 0 6 1;
#X connect 7 0 9 1;
#X connect 9 0 10 0;
#X connect 9 1 10 1;
#X connect 10 0 11 0;
#X connect 12 0 13 0;
#X connect 14 0 6 0;
#X connect 14 0 9 0;
#X connect 14 1 7 0;
#X connect 14 2 15 0;
#X connect 15 0 16 0;
#X connect 17 0 19 0;
#X connect 18 0 1 1;
#X connect 19 0 1 0;
#X connect 19 1 4 0;
#X connect 19 1 18 0;
#X restore 170 510 pd hann-window;
#N canvas 388 86 694 447 insample 0;
#N canvas 0 22 450 300 (subpatch) 0;
#X array \$0-sample 62079 float 0;
#X coords 0 1 62078 -1 400 150 1;
#X restore 281 135 graph;
#X obj 28 133 r read-sample;
#X obj 28 184 unpack s f;
#X obj 28 294 soundfiler;
#X text 365 360 read a sample;
#X obj 285 359 loadbang;
#X obj 28 210 t s b;
#X obj 84 209 symbol \$0-sample;
#X obj 28 245 pack s s;
#X msg 28 270 read -resize \$1 \$2;
#X obj 83 156 44100;
#X obj 28 157 t a b;
#X obj 38 318 s \$0-samplength;
#X obj 125 184 s \$0-insamprate;
#X obj 28 357 /;
#X obj 28 381 * 1000;
#X obj 28 404 s \$0-samp-msec;
#X obj 66 357 r \$0-insamprate;
#X obj 37 68 hip~ 5;
#X obj 37 44 adc~ 1;
#X obj 29 9 inlet;
#X obj 99 44 samplerate~;
#X obj 29 93 tabwrite~ \$0-sample;
#X obj 99 68 s \$0-insamprate;
#X msg 285 383 \; read-sample ../sound/voice.wav;
#X obj 276 20 inlet;
#X obj 276 42 openpanel;
#X obj 276 67 s read-sample;
#X connect 1 0 11 0;
#X connect 2 0 6 0;
#X connect 2 1 13 0;
#X connect 3 0 12 0;
#X connect 3 0 14 0;
#X connect 5 0 24 0;
#X connect 6 0 8 0;
#X connect 6 1 7 0;
#X connect 7 0 8 1;
#X connect 8 0 9 0;
#X connect 9 0 3 0;
#X connect 10 0 13 0;
#X connect 11 0 2 0;
#X connect 11 1 10 0;
#X connect 14 0 15 0;
#X connect 15 0 16 0;
#X connect 17 0 14 1;
#X connect 18 0 22 0;
#X connect 19 0 18 0;
#X connect 20 0 21 0;
#X connect 20 0 22 0;
#X connect 21 0 23 0;
#X connect 25 0 26 0;
#X connect 26 0 27 0;
#X restore 171 462 pd insample;
#X floatatom 247 462 5 0 0 0 - #0-samp-msec -, f 5;
#X msg 22 434 ../sound/bell.aiff;
#X msg 22 459 ../sound/voice.wav;
#X msg 22 484 ../sound/voice2.wav;
#X obj 22 510 s read-sample;
#X obj 171 421 bng 15 250 50 0 empty empty empty 0 -6 0 8 -262144 -1
-1;
#X text 190 420 <- record;
#X obj 346 330 tgl 15 0 empty empty empty 0 -6 0 8 -262144 -1 -1 0
1;
#X obj 22 317 s location;
#X obj 101 317 s speed;
#X obj 175 295 bng 15 250 50 0 empty empty empty 0 -6 0 8 -262144 -1
-1;
#X obj 175 317 s rewind;
#X msg 236 247 200;
#X msg 236 269 100;
#X text 266 246 contract;
#X text 270 291 expand;
#X obj 346 400 s lock;
#X text 345 215 detune;
#X text 22 240 location;
#X text 19 256 (stops;
#X text 24 271 motion);
#X text 99 258 motion in;
#X text 25 412 read input sound;
#X floatatom 346 574 5 0 0 0 - window-size -, f 5;
#X msg 346 462 512;
#X msg 346 484 1024;
#X msg 346 506 2048;
#X msg 346 528 4096;
#X obj 346 550 s window-size;
#X text 343 426 window size \,;
#X text 343 441 samples;
#X text 377 461 <- set;
#X text 43 216 ------- location controls -------;
#X text 381 574 (check);
#X obj 236 318 s auto;
#X text 19 46 This patch takes a sound \, analyzes windows in it both
for channel magnitude and for phase precession in each channel (compared
to another operlapping window). The real-time output recreates the
same magnitudes and phase precession \, althought the phases themselves
are in general different. You can control either the location or its
motion (setting location stops motion \, while setting a non-zero motion
causes the location to change automatically). "Rewind" goes back to
the beginning. You can use different window sizes (use the message
boxes - the number box is for readout). The "lock" feature forces phase
coherency between neighboring channels \, which makes a more present
sound but can add artifacts to the sound. Look in "pd fft-analysis"
to see the workings.;
#X obj 346 301 bng 15 250 50 0 no-detune empty empty 0 -6 0 8 -262144
-1 -1;
#X obj 234 442 bng 15 250 50 0 empty empty empty 0 -6 0 8 -262144 -1
-1;
#X text 185 440 file ->;
#X msg 236 291 20;
#X obj 1 1 cnv 15 445 20 empty \$0-pddp.cnv.header phase_vocoder...
20 10 1 18 -261139 -33289 0;
#X text 99 26 ... for time stretching and contraction;
#X text 364 300 no detune;
#X text 286 476 (msec);
#X text 285 461 length;
#X obj 1 632 cnv 15 445 20 empty \$0-pddp.cnv.footer empty 20 12 0
14 -233017 -33289 0;
#N canvas 44 246 494 284 META 0;
#X text 12 105 WEBSITE http://crca.ucsd.edu/~msp/;
#X text 12 85 AUTHOR Miller Puckette;
#X text 12 65 LIBRARY PDDP;
#X text 12 25 LICENSE SIBSD;
#X text 12 125 HELP_PATCH_AUTHORS Updated for release 0.39. Jonathan
Wilkes revised the patch to conform to the PDDP template for Pd version
0.42.;
#X text 12 45 DESCRIPTION phase vocoder;
#X text 12 5 KEYWORDS signal tutorial;
#X restore 392 634 pd META;
#N canvas 13 202 428 190 References 0;
#X obj 1 1 cnv 15 425 20 empty \$0-pddp.cnv.subheading empty 3 12 0
14 -261139 -33289 0;
#X text 7 2 phase vocoder- Related Help Documents;
#X text 19 37 links:;
#X restore 103 634 pd References;
#X obj 247 551 s \$0-sampleDur;
#X obj 174 267 s rw;
#X obj 431 444 r w1;
#X obj 465 466 r w2;
#X obj 499 488 r w3;
#X obj 533 512 r w4;
#X obj 493 158 r joysticksDelta;
#X obj 705 159 r stop;
#X obj 493 231 spigot;
#X floatatom 493 254 5 0 0 0 - - -, f 5;
#X obj 672 232 spigot;
#X floatatom 672 255 5 0 0 0 - - -, f 5;
#X obj 705 182 expr ($f1 - 1) * -1;
#X floatatom 705 205 5 0 0 0 - - -, f 5;
#X text 751 135 // mirror values;
#X text 751 155 // (input - maxValue) * -1;
#X obj 672 447 s pointer;
#X floatatom 672 404 5 0 0 0 - - -, f 5;
#N canvas 0 89 450 300 sopiscale 0;
#X text 207 136 inlets;
#X text 208 187 _min value for the output range;
#X text 208 202 _max value for the output range;
#X text 206 223 _min value for the incoming range;
#X text 206 238 _max value for the incoming range;
#X text 211 165 _ float;
#X obj 102 193 *;
#X obj 103 30 inlet;
#X obj 117 168 /;
#X obj 102 301 outlet;
#X obj 172 80 float \$1;
#X obj 118 81 float \$2;
#X obj 103 58 t f b b b b;
#X obj 150 114 float \$4;
#X obj 207 115 float \$3;
#X obj 118 101 -;
#X obj 149 145 -;
#X obj 56 176 -;
#X obj 44 121 t f b;
#X obj 71 146 float \$3;
#X obj 102 221 t f b;
#X obj 102 260 +;
#X obj 128 243 float \$1;
#X obj 44 93 clip;
#X obj 145 32 loadbang;
#X obj 215 36 inlet;
#X obj 265 36 inlet;
#X obj 313 28 inlet;
#X obj 365 36 inlet;
#X connect 6 0 20 0;
#X connect 7 0 12 0;
#X connect 8 0 6 1;
#X connect 10 0 15 1;
#X connect 11 0 15 0;
#X connect 12 0 23 0;
#X connect 12 1 11 0;
#X connect 12 2 10 0;
#X connect 12 3 13 0;
#X connect 12 4 14 0;
#X connect 13 0 16 0;
#X connect 13 0 23 2;
#X connect 14 0 16 1;
#X connect 14 0 23 1;
#X connect 15 0 8 0;
#X connect 16 0 8 1;
#X connect 17 0 6 0;
#X connect 18 0 17 0;
#X connect 18 1 19 0;
#X connect 19 0 17 1;
#X connect 20 0 21 0;
#X connect 20 1 22 0;
#X connect 21 0 9 0;
#X connect 22 0 21 1;
#X connect 23 0 18 0;
#X connect 24 0 11 0;
#X connect 24 0 10 0;
#X connect 24 0 13 0;
#X connect 24 0 14 0;
#X connect 25 0 10 1;
#X connect 25 0 22 1;
#X connect 26 0 11 1;
#X connect 27 0 14 1;
#X connect 27 0 19 1;
#X connect 28 0 13 1;
#X restore 672 381 pd sopiscale;
#X obj 706 281 r \$0-sampleDur;
#X obj 723 305 loadbang;
#X floatatom 493 302 5 0 0 0 - - -, f 5;
#X obj 493 354 s motion;
#X obj 101 347 r motion;
#X obj 22 345 r pointer;
#X obj 493 324 change;
#X obj 672 426 change;
#X msg 723 344 0.001;
#X obj 493 279 sopiscale 1 1000 0.001 0.9;
#N canvas 991 267 605 719 gamepad 1;
#X obj 11 132 hid;
#X obj 11 283 route abs_x abs_y abs_z abs_rz;
#X floatatom 11 317 5 0 0 0 - - -, f 5;
#X floatatom 55 317 5 0 0 0 - - -, f 5;
#X floatatom 99 317 5 0 0 0 - - -, f 5;
#X floatatom 143 317 5 0 0 0 - - -, f 5;
#X obj 11 159 route abs key;
#X floatatom 51 207 5 0 0 0 - - -, f 5;
#X floatatom 95 207 5 0 0 0 - - -, f 5;
#X floatatom 139 207 5 0 0 0 - - -, f 5;
#X floatatom 183 207 5 0 0 0 - - -, f 5;
#X floatatom 223 207 5 0 0 0 - - -, f 5;
#X floatatom 263 207 5 0 0 0 - - -, f 5;
#X text 56 498 // rms sqrt(1/n * (x1 ** 2) + (x2 **2) + (xn ** 2))
;
#X floatatom 21 497 5 0 0 0 - - -, f 5;
#X obj 21 446 expr sqrt(0.5 * (pow($f1 \, 2) + pow($f2 \, 2) + pow($f3
\, 2) + pow($f4 \, 2)));
#X obj 11 380 sopiscale 0 1 0 244;
#X obj 141 380 sopiscale 0 1 92 255;
#X obj 281 380 sopiscale 0 1 0 244;
#X obj 411 380 sopiscale 0 1 4 250;
#X obj 141 403 t f b;
#X obj 281 403 t f b;
#X obj 411 403 t f b;
#X obj 51 229 sel 1;
#X obj 95 229 sel 1;
#X obj 139 229 sel 1;
#X obj 183 229 sel 1;
#X obj 224 229 sel 1;
#X obj 51 252 s w1;
#X obj 95 252 s w2;
#X obj 139 252 s w3;
#X obj 183 252 s w4;
#X obj 268 252 s stop;
#X obj 224 252 s rw;
#X obj 21 660 s joysticksDelta;
#X obj 268 229 == 0;
#X obj 21 559 -;
#X obj 36 529 pipe 0.001;
#X obj 21 582 abs;
#X floatatom 21 605 5 0 0 0 - - -, f 5;
#X obj 48 183 route btn_0 btn_1 btn_2 btn_3 btn_8 btn_7;
#X msg 76 90 poll 10;
#X msg 11 59 open \$1;
#X floatatom 11 16 5 0 0 0 - - -, f 5;
#X obj 11 38 int;
#X obj 76 64 loadbang;
#X connect 0 0 6 0;
#X connect 1 0 2 0;
#X connect 1 1 3 0;
#X connect 1 2 4 0;
#X connect 1 3 5 0;
#X connect 2 0 16 0;
#X connect 3 0 17 0;
#X connect 4 0 18 0;
#X connect 5 0 19 0;
#X connect 6 0 1 0;
#X connect 6 1 40 0;
#X connect 7 0 23 0;
#X connect 8 0 24 0;
#X connect 9 0 25 0;
#X connect 10 0 26 0;
#X connect 11 0 27 0;
#X connect 12 0 35 0;
#X connect 14 0 36 0;
#X connect 14 0 37 0;
#X connect 15 0 14 0;
#X connect 16 0 15 0;
#X connect 17 0 20 0;
#X connect 18 0 21 0;
#X connect 19 0 22 0;
#X connect 20 0 15 1;
#X connect 20 1 15 0;
#X connect 21 0 15 2;
#X connect 21 1 15 0;
#X connect 22 0 15 3;
#X connect 22 1 15 0;
#X connect 23 0 28 0;
#X connect 24 0 29 0;
#X connect 25 0 30 0;
#X connect 26 0 31 0;
#X connect 27 0 33 0;
#X connect 35 0 32 0;
#X connect 36 0 38 0;
#X connect 37 0 36 1;
#X connect 38 0 39 0;
#X connect 39 0 34 0;
#X connect 40 0 7 0;
#X connect 40 1 8 0;
#X connect 40 2 9 0;
#X connect 40 3 10 0;
#X connect 40 4 11 0;
#X connect 40 5 12 0;
#X connect 41 0 0 0;
#X connect 42 0 0 0;
#X connect 43 0 44 0;
#X connect 44 0 42 0;
#X connect 45 0 41 0;
#X restore 491 130 pd gamepad;
#X msg 771 344 0.6;
#X msg 683 344 1000;
#X text 6 656 // 3.audio.examples/I07.phase.vocoder.pd;
#X connect 0 0 5 0;
#X connect 1 0 21 0;
#X connect 2 0 20 0;
#X connect 3 0 9 0;
#X connect 3 0 9 1;
#X connect 12 0 60 0;
#X connect 13 0 16 0;
#X connect 14 0 16 0;
#X connect 15 0 16 0;
#X connect 17 0 11 0;
#X connect 19 0 28 0;
#X connect 22 0 23 0;
#X connect 24 0 46 0;
#X connect 25 0 46 0;
#X connect 36 0 40 0;
#X connect 37 0 40 0;
#X connect 38 0 40 0;
#X connect 39 0 40 0;
#X connect 49 0 11 1;
#X connect 51 0 46 0;
#X connect 62 0 36 0;
#X connect 63 0 37 0;
#X connect 64 0 38 0;
#X connect 65 0 39 0;
#X connect 66 0 68 0;
#X connect 66 0 70 0;
#X connect 67 0 68 1;
#X connect 67 0 72 0;
#X connect 68 0 69 0;
#X connect 69 0 88 0;
#X connect 70 0 71 0;
#X connect 71 0 78 0;
#X connect 72 0 73 0;
#X connect 73 0 70 1;
#X connect 77 0 86 0;
#X connect 78 0 77 0;
#X connect 79 0 78 2;
#X connect 80 0 87 0;
#X connect 80 0 90 0;
#X connect 80 0 91 0;
#X connect 81 0 85 0;
#X connect 83 0 21 0;
#X connect 84 0 20 0;
#X connect 85 0 82 0;
#X connect 86 0 76 0;
#X connect 87 0 78 3;
#X connect 88 0 81 0;
#X connect 90 0 78 4;
#X connect 91 0 78 1;
